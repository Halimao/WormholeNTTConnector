const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BGLdF6jF.js","assets/index-CUtl-BF5.css","assets/index-D4WbU33f-Dfd1dsQV.js","assets/index-DVj58Xn9-5qOZdwjj.js","assets/index-CNhD4Iu8-s317dwbW.js","assets/index-BgvV5NF2-DpcLDqm4.js"])))=>i.map(i=>d[i]);
import{a as T3,v as s2,_ as O1,$ as b3,L as v3,w as I3,k as O3,O as k3,u as y,b as A,T as C3,D as S3,J as p2,H as G,r as f2,o as N1,Q as V,t as d1,c as D2,x as p,d as D1,g as L3,p as U3,y as P3,R as D3,P as X1,f as M3,e as $3,l as T2,h as M2,i as g1,M as x3,j as B3,m as y2,W as $2,I as K3,n as G3,q as u1,X as x2,E as Z1,G as _3,s as F3,z as b2,A as W3,B as v2,Z as V3,C as B2,Y as m2,F as z3,K as K2}from"./index-BGLdF6jF.js";var Y3=Object.defineProperty,G2=n=>{throw TypeError(n)},j3=(n,t,e)=>t in n?Y3(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e,T=(n,t,e)=>j3(n,typeof t!="symbol"?t+"":t,e),g2=(n,t,e)=>t.has(n)||G2("Cannot "+e),D=(n,t,e)=>(g2(n,t,"read from private field"),e?e.call(n):t.get(n)),B=(n,t,e)=>t.has(n)?G2("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(n):t.set(n,e),P=(n,t,e,r)=>(g2(n,t,"write to private field"),t.set(n,e),e),$=(n,t,e)=>(g2(n,t,"access private method"),e),H3=(n,t,e,r)=>({set _(i){P(n,t,i)},get _(){return D(n,t,r)}});function J3(n){const t=y(n,"randomBytes");t[6]=t[6]&15|64,t[8]=t[8]&63|128;const e=A(t);return[e.substring(2,10),e.substring(10,14),e.substring(14,18),e.substring(18,22),e.substring(22,34)].join("-")}let _2=!1;const F2=function(n,t,e){return k3(n,t).update(e).digest()};let W2=F2;function T1(n,t,e){const r=y(t,"key"),i=y(e,"data");return A(W2(n,r,i))}T1._=F2;T1.lock=function(){_2=!0};T1.register=function(n){if(_2)throw new Error("computeHmac is locked");W2=n};Object.freeze(T1);const X3=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),V2=Uint8Array.from({length:16},(n,t)=>t),Z3=V2.map(n=>(9*n+5)%16);let w2=[V2],A2=[Z3];for(let n=0;n<4;n++)for(let t of[w2,A2])t.push(t[n].map(e=>X3[e]));const z2=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(n=>new Uint8Array(n)),q3=w2.map((n,t)=>n.map(e=>z2[t][e])),Q3=A2.map((n,t)=>n.map(e=>z2[t][e])),t0=new Uint32Array([0,1518500249,1859775393,2400959708,2840853838]),e0=new Uint32Array([1352829926,1548603684,1836072691,2053994217,0]),x1=(n,t)=>n<<t|n>>>32-t;function I2(n,t,e,r){return n===0?t^e^r:n===1?t&e|~t&r:n===2?(t|~e)^r:n===3?t&r|e&~r:t^(e|~r)}const B1=new Uint32Array(16);class n0 extends K3{constructor(){super(64,20,8,!0),this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){const{h0:t,h1:e,h2:r,h3:i,h4:s}=this;return[t,e,r,i,s]}set(t,e,r,i,s){this.h0=t|0,this.h1=e|0,this.h2=r|0,this.h3=i|0,this.h4=s|0}process(t,e){for(let c=0;c<16;c++,e+=4)B1[c]=t.getUint32(e,!0);let r=this.h0|0,i=r,s=this.h1|0,o=s,a=this.h2|0,l=a,d=this.h3|0,h=d,u=this.h4|0,f=u;for(let c=0;c<5;c++){const w=4-c,g=t0[c],N=e0[c],R=w2[c],v=A2[c],k=q3[c],F=Q3[c];for(let E=0;E<16;E++){const O=x1(r+I2(c,s,a,d)+B1[R[E]]+g,k[E])+u|0;r=u,u=d,d=x1(a,10)|0,a=s,s=O}for(let E=0;E<16;E++){const O=x1(i+I2(w,o,l,h)+B1[v[E]]+N,F[E])+f|0;i=f,f=h,h=x1(l,10)|0,l=o,o=O}}this.set(this.h1+a+h|0,this.h2+d+f|0,this.h3+u+i|0,this.h4+r+o|0,this.h0+s+l|0)}roundClean(){B1.fill(0)}destroy(){this.destroyed=!0,this.buffer.fill(0),this.set(0,0,0,0,0)}}const r0=$3(()=>new n0);let Y2=!1;const j2=function(n){return r0(n)};let H2=j2;function b1(n){const t=y(n,"data");return A(H2(t))}b1._=j2;b1.lock=function(){Y2=!0};b1.register=function(n){if(Y2)throw new TypeError("ripemd160 is locked");H2=n};Object.freeze(b1);let J2=!1;const X2=function(n,t,e,r,i){return C3(n,t,e,r,i)};let Z2=X2;function z(n,t,e,r,i){const s=y(n,"password"),o=y(t,"salt");return A(Z2(s,o,e,r,i))}z._=X2;z.lock=function(){J2=!0};z.register=function(n){if(J2)throw new Error("pbkdf2 is locked");Z2=n};Object.freeze(z);let q2=!1;const Q2=function(n){return new Uint8Array(S3(n))};let t3=Q2;function _(n){return t3(n)}_._=Q2;_.lock=function(){q2=!0};_.register=function(n){if(q2)throw new Error("randomBytes is locked");t3=n};Object.freeze(_);const m=(n,t)=>n<<t|n>>>32-t;function O2(n,t,e,r,i,s){let o=n[t++]^e[r++],a=n[t++]^e[r++],l=n[t++]^e[r++],d=n[t++]^e[r++],h=n[t++]^e[r++],u=n[t++]^e[r++],f=n[t++]^e[r++],c=n[t++]^e[r++],w=n[t++]^e[r++],g=n[t++]^e[r++],N=n[t++]^e[r++],R=n[t++]^e[r++],v=n[t++]^e[r++],k=n[t++]^e[r++],F=n[t++]^e[r++],E=n[t++]^e[r++],O=o,Y=a,j=l,H=d,J=h,X=u,Z=f,q=c,Q=w,t1=g,e1=N,n1=R,r1=v,i1=k,s1=F,o1=E;for(let R2=0;R2<8;R2+=2)J^=m(O+r1|0,7),Q^=m(J+O|0,9),r1^=m(Q+J|0,13),O^=m(r1+Q|0,18),t1^=m(X+Y|0,7),i1^=m(t1+X|0,9),Y^=m(i1+t1|0,13),X^=m(Y+i1|0,18),s1^=m(e1+Z|0,7),j^=m(s1+e1|0,9),Z^=m(j+s1|0,13),e1^=m(Z+j|0,18),H^=m(o1+n1|0,7),q^=m(H+o1|0,9),n1^=m(q+H|0,13),o1^=m(n1+q|0,18),Y^=m(O+H|0,7),j^=m(Y+O|0,9),H^=m(j+Y|0,13),O^=m(H+j|0,18),Z^=m(X+J|0,7),q^=m(Z+X|0,9),J^=m(q+Z|0,13),X^=m(J+q|0,18),n1^=m(e1+t1|0,7),Q^=m(n1+e1|0,9),t1^=m(Q+n1|0,13),e1^=m(t1+Q|0,18),r1^=m(o1+s1|0,7),i1^=m(r1+o1|0,9),s1^=m(i1+r1|0,13),o1^=m(s1+i1|0,18);i[s++]=o+O|0,i[s++]=a+Y|0,i[s++]=l+j|0,i[s++]=d+H|0,i[s++]=h+J|0,i[s++]=u+X|0,i[s++]=f+Z|0,i[s++]=c+q|0,i[s++]=w+Q|0,i[s++]=g+t1|0,i[s++]=N+e1|0,i[s++]=R+n1|0,i[s++]=v+r1|0,i[s++]=k+i1|0,i[s++]=F+s1|0,i[s++]=E+o1|0}function w1(n,t,e,r,i){let s=r+0,o=r+16*i;for(let a=0;a<16;a++)e[o+a]=n[t+(2*i-1)*16+a];for(let a=0;a<i;a++,s+=16,t+=16)O2(e,o,n,t,e,s),a>0&&(o+=16),O2(e,s,n,t+=16,e,o)}function e3(n,t,e){const r=G3({dkLen:32,asyncTick:10,maxmem:1073742848},e),{N:i,r:s,p:o,dkLen:a,asyncTick:l,maxmem:d,onProgress:h}=r;if(u1(i),u1(s),u1(o),u1(a),u1(l),u1(d),h!==void 0&&typeof h!="function")throw new Error("progressCb should be function");const u=128*s,f=u/4;if(i<=1||i&i-1||i>=2**(u/8)||i>2**32)throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(o<0||o>(2**32-1)*32/u)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(a<0||a>(2**32-1)*32)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");const c=u*(i+o);if(c>d)throw new Error(`Scrypt: parameters too large, ${c} (128 * r * (N + p)) > ${d} (maxmem)`);const w=x2(K2,n,t,{c:1,dkLen:u*o}),g=Z1(w),N=Z1(new Uint8Array(u*i)),R=Z1(new Uint8Array(u));let v=()=>{};if(h){const k=2*i*o,F=Math.max(Math.floor(k/1e4),1);let E=0;v=()=>{E++,h&&(!(E%F)||E===k)&&h(E/k)}}return{N:i,r:s,p:o,dkLen:a,blockSize32:f,V:N,B32:g,B:w,tmp:R,blockMixCb:v,asyncTick:l}}function n3(n,t,e,r,i){const s=x2(K2,n,e,{c:1,dkLen:t});return e.fill(0),r.fill(0),i.fill(0),s}function i0(n,t,e){const{N:r,r:i,p:s,dkLen:o,blockSize32:a,V:l,B32:d,B:h,tmp:u,blockMixCb:f}=e3(n,t,e);for(let c=0;c<s;c++){const w=a*c;for(let g=0;g<a;g++)l[g]=d[w+g];for(let g=0,N=0;g<r-1;g++)w1(l,N,l,N+=a,i),f();w1(l,(r-1)*a,d,w,i),f();for(let g=0;g<r;g++){const N=d[w+a-16]%r;for(let R=0;R<a;R++)u[R]=d[w+R]^l[N*a+R];w1(u,0,d,w,i),f()}}return n3(n,o,h,l,u)}async function s0(n,t,e){const{N:r,r:i,p:s,dkLen:o,blockSize32:a,V:l,B32:d,B:h,tmp:u,blockMixCb:f,asyncTick:c}=e3(n,t,e);for(let w=0;w<s;w++){const g=a*w;for(let R=0;R<a;R++)l[R]=d[g+R];let N=0;await T2(r-1,c,()=>{w1(l,N,l,N+=a,i),f()}),w1(l,(r-1)*a,d,g,i),f(),await T2(r,c,()=>{const R=d[g+a-16]%r;for(let v=0;v<a;v++)u[v]=d[g+v]^l[R*a+v];w1(u,0,d,g,i),f()})}return n3(n,o,h,l,u)}let r3=!1,i3=!1;const s3=async function(n,t,e,r,i,s,o){return await s0(n,t,{N:e,r,p:i,dkLen:s,onProgress:o})},o3=function(n,t,e,r,i,s){return i0(n,t,{N:e,r,p:i,dkLen:s})};let a3=s3,l3=o3;async function v1(n,t,e,r,i,s,o){const a=y(n,"passwd"),l=y(t,"salt");return A(await a3(a,l,e,r,i,s,o))}v1._=s3;v1.lock=function(){i3=!0};v1.register=function(n){if(i3)throw new Error("scrypt is locked");a3=n};Object.freeze(v1);function I1(n,t,e,r,i,s){const o=y(n,"passwd"),a=y(t,"salt");return A(l3(o,a,e,r,i,s))}I1._=o3;I1.lock=function(){r3=!0};I1.register=function(n){if(r3)throw new Error("scryptSync is locked");l3=n};Object.freeze(I1);const o0=`Ethereum Signed Message:
`;function a0(n){return typeof n=="string"&&(n=g1(n)),m2(d1([g1(o0),g1(String(n.length)),n]))}var a1,f1;const l0=class d3 extends M2{constructor(t){super(t.provider),T(this,"signer"),B(this,a1),B(this,f1),G(this,{signer:t}),P(this,a1,null),P(this,f1,0)}async getAddress(){return this.signer.getAddress()}connect(t){return new d3(this.signer.connect(t))}async getNonce(t){if(t==="pending"){D(this,a1)==null&&P(this,a1,super.getNonce("pending"));const e=D(this,f1);return await D(this,a1)+e}return super.getNonce(t)}increment(){H3(this,f1)._++}reset(){P(this,f1,0),P(this,a1,null)}async sendTransaction(t){const e=this.getNonce("pending");return this.increment(),t=await this.signer.populateTransaction(t),t.nonce=await e,await this.signer.sendTransaction(t)}signTransaction(t){return this.signer.signTransaction(t)}signMessage(t){return this.signer.signMessage(t)}signTypedData(t,e,r){return this.signer.signTypedData(t,e,r)}};a1=new WeakMap,f1=new WeakMap;let d0=l0;var C1;const h0=class h3 extends M2{constructor(t,e){super(e),T(this,"address"),B(this,C1),p(t&&typeof t.sign=="function","invalid private key","privateKey","[ REDACTED ]"),P(this,C1,t);const r=X1(this.signingKey.publicKey);G(this,{address:r})}get signingKey(){return D(this,C1)}get privateKey(){return this.signingKey.privateKey}async getAddress(){return this.address}connect(t){return new h3(D(this,C1),t)}async signTransaction(t){t=_3(t);const{to:e,from:r}=await F3({to:t.to?b2(t.to,this.provider):void 0,from:t.from?b2(t.from,this.provider):void 0});e!=null&&(t.to=e),r!=null&&(t.from=r),t.from!=null&&(p(y2(t.from)===this.address,"transaction from address mismatch","tx.from",t.from),delete t.from);const i=W3.from(t);return i.signature=this.signingKey.sign(i.unsignedHash),i.serialized}async signMessage(t){return this.signMessageSync(t)}signMessageSync(t){return this.signingKey.sign(a0(t)).serialized}async signTypedData(t,e,r){const i=await v2.resolveNames(t,e,r,async s=>{V(this.provider!=null,"cannot resolve ENS names without a provider","UNSUPPORTED_OPERATION",{operation:"resolveName",info:{name:s}});const o=await this.provider.resolveName(s);return V(o!=null,"unconfigured ENS name","UNCONFIGURED_NAME",{value:s}),o});return this.signingKey.sign(v2.hash(i.domain,e,i.value)).serialized}};C1=new WeakMap;let u3=h0;const z1=" !#$%&'()*+,-./<=>?@[]^_`{|}~",u0=/^[a-z]*$/i;function k2(n,t){let e=97;return n.reduce((r,i)=>(i===t?e++:i.match(u0)?r.push(String.fromCharCode(e)+i):(e=97,r.push(i)),r),[])}function c0(n,t){for(let i=z1.length-1;i>=0;i--)n=n.split(z1[i]).join(t.substring(2*i,2*i+2));const e=[],r=n.replace(/(:|([0-9])|([A-Z][a-z]*))/g,(i,s,o,a)=>{if(o)for(let l=parseInt(o);l>=0;l--)e.push(";");else e.push(s.toLowerCase());return""});if(r)throw new Error(`leftovers: ${JSON.stringify(r)}`);return k2(k2(e,";"),":")}function p0(n){return p(n[0]==="0","unsupported auwl data","data",n),c0(n.substring(1+2*z1.length),n.substring(1,1+2*z1.length))}class f0{constructor(t){T(this,"locale"),G(this,{locale:t})}split(t){return t.toLowerCase().split(/\s+/g)}join(t){return t.join(" ")}}var S1,Y1,y1,_1,o2;class y0 extends f0{constructor(t,e,r){super(t),B(this,_1),B(this,S1),B(this,Y1),B(this,y1),P(this,S1,e),P(this,Y1,r),P(this,y1,null)}get _data(){return D(this,S1)}_decodeWords(){return p0(D(this,S1))}getWord(t){const e=$(this,_1,o2).call(this);return p(t>=0&&t<e.length,`invalid word index: ${t}`,"index",t),e[t]}getWordIndex(t){return $(this,_1,o2).call(this).indexOf(t)}}S1=new WeakMap,Y1=new WeakMap,y1=new WeakMap,_1=new WeakSet,o2=function(){if(D(this,y1)==null){const n=this._decodeWords();if($2(n.join(`
`)+`
`)!==D(this,Y1))throw new Error(`BIP39 Wordlist for ${this.locale} FAILED`);P(this,y1,n)}return D(this,y1)};const m0="0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO",g0="0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60";let q1=null;class h1 extends y0{constructor(){super("en",m0,g0)}static wordlist(){return q1==null&&(q1=new h1),q1}}function c3(n){return(1<<n)-1<<8-n&255}function w0(n){return(1<<n)-1&255}function Q1(n,t){V3("NFKD"),t==null&&(t=h1.wordlist());const e=t.split(n);p(e.length%3===0&&e.length>=12&&e.length<=24,"invalid mnemonic length","mnemonic","[ REDACTED ]");const r=new Uint8Array(Math.ceil(11*e.length/8));let i=0;for(let d=0;d<e.length;d++){let h=t.getWordIndex(e[d].normalize("NFKD"));p(h>=0,`invalid mnemonic word at index ${d}`,"mnemonic","[ REDACTED ]");for(let u=0;u<11;u++)h&1<<10-u&&(r[i>>3]|=1<<7-i%8),i++}const s=32*e.length/3,o=e.length/3,a=c3(o),l=y(N1(r.slice(0,s/8)))[0]&a;return p(l===(r[r.length-1]&a),"invalid mnemonic checksum","mnemonic","[ REDACTED ]"),A(r.slice(0,s/8))}function t2(n,t){p(n.length%4===0&&n.length>=16&&n.length<=32,"invalid entropy size","entropy","[ REDACTED ]"),t==null&&(t=h1.wordlist());const e=[0];let r=11;for(let o=0;o<n.length;o++)r>8?(e[e.length-1]<<=8,e[e.length-1]|=n[o],r-=8):(e[e.length-1]<<=r,e[e.length-1]|=n[o]>>8-r,e.push(n[o]&w0(8-r)),r+=3);const i=n.length/4,s=parseInt(N1(n).substring(2,4),16)&c3(i);return e[e.length-1]<<=i,e[e.length-1]|=s>>8-i,t.join(e.map(o=>t.getWord(o)))}const e2={};class E1{constructor(t,e,r,i,s){T(this,"phrase"),T(this,"password"),T(this,"wordlist"),T(this,"entropy"),i==null&&(i=""),s==null&&(s=h1.wordlist()),p2(t,e2,"Mnemonic"),G(this,{phrase:r,password:i,wordlist:s,entropy:e})}computeSeed(){const t=g1("mnemonic"+this.password,"NFKD");return z(g1(this.phrase,"NFKD"),t,2048,64,"sha512")}static fromPhrase(t,e,r){const i=Q1(t,r);return t=t2(y(i),r),new E1(e2,i,t,e,r)}static fromEntropy(t,e,r){const i=y(t,"entropy"),s=t2(i,r);return new E1(e2,A(i),s,e,r)}static entropyToPhrase(t,e){const r=y(t,"entropy");return t2(r,e)}static phraseToEntropy(t,e){return Q1(t,e)}static isValidMnemonic(t,e){try{return Q1(t,e),!0}catch{}return!1}}/*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */var I=function(n,t,e,r){if(e==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof t=="function"?n!==t||!r:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e==="m"?r:e==="a"?r.call(n):r?r.value:t.get(n)},n2=function(n,t,e,r,i){if(typeof t=="function"?n!==t||!i:!t.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");return t.set(n,e),e},F1,L,M;const A0={16:10,24:12,32:14},N0=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],C=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],K1=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],E0=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],R0=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],T0=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],b0=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],v0=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],I0=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],O0=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],k0=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],C0=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],S0=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],L0=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],U0=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function r2(n){const t=[];for(let e=0;e<n.length;e+=4)t.push(n[e]<<24|n[e+1]<<16|n[e+2]<<8|n[e+3]);return t}class N2{get key(){return I(this,F1,"f").slice()}constructor(t){if(F1.set(this,void 0),L.set(this,void 0),M.set(this,void 0),!(this instanceof N2))throw Error("AES must be instanitated with `new`");n2(this,F1,new Uint8Array(t));const e=A0[this.key.length];if(e==null)throw new TypeError("invalid key size (must be 16, 24 or 32 bytes)");n2(this,M,[]),n2(this,L,[]);for(let h=0;h<=e;h++)I(this,M,"f").push([0,0,0,0]),I(this,L,"f").push([0,0,0,0]);const r=(e+1)*4,i=this.key.length/4,s=r2(this.key);let o;for(let h=0;h<i;h++)o=h>>2,I(this,M,"f")[o][h%4]=s[h],I(this,L,"f")[e-o][h%4]=s[h];let a=0,l=i,d;for(;l<r;){if(d=s[i-1],s[0]^=C[d>>16&255]<<24^C[d>>8&255]<<16^C[d&255]<<8^C[d>>24&255]^N0[a]<<24,a+=1,i!=8)for(let c=1;c<i;c++)s[c]^=s[c-1];else{for(let c=1;c<i/2;c++)s[c]^=s[c-1];d=s[i/2-1],s[i/2]^=C[d&255]^C[d>>8&255]<<8^C[d>>16&255]<<16^C[d>>24&255]<<24;for(let c=i/2+1;c<i;c++)s[c]^=s[c-1]}let h=0,u,f;for(;h<i&&l<r;)u=l>>2,f=l%4,I(this,M,"f")[u][f]=s[h],I(this,L,"f")[e-u][f]=s[h++],l++}for(let h=1;h<e;h++)for(let u=0;u<4;u++)d=I(this,L,"f")[h][u],I(this,L,"f")[h][u]=C0[d>>24&255]^S0[d>>16&255]^L0[d>>8&255]^U0[d&255]}encrypt(t){if(t.length!=16)throw new TypeError("invalid plaintext size (must be 16 bytes)");const e=I(this,M,"f").length-1,r=[0,0,0,0];let i=r2(t);for(let a=0;a<4;a++)i[a]^=I(this,M,"f")[0][a];for(let a=1;a<e;a++){for(let l=0;l<4;l++)r[l]=E0[i[l]>>24&255]^R0[i[(l+1)%4]>>16&255]^T0[i[(l+2)%4]>>8&255]^b0[i[(l+3)%4]&255]^I(this,M,"f")[a][l];i=r.slice()}const s=new Uint8Array(16);let o=0;for(let a=0;a<4;a++)o=I(this,M,"f")[e][a],s[4*a]=(C[i[a]>>24&255]^o>>24)&255,s[4*a+1]=(C[i[(a+1)%4]>>16&255]^o>>16)&255,s[4*a+2]=(C[i[(a+2)%4]>>8&255]^o>>8)&255,s[4*a+3]=(C[i[(a+3)%4]&255]^o)&255;return s}decrypt(t){if(t.length!=16)throw new TypeError("invalid ciphertext size (must be 16 bytes)");const e=I(this,L,"f").length-1,r=[0,0,0,0];let i=r2(t);for(let a=0;a<4;a++)i[a]^=I(this,L,"f")[0][a];for(let a=1;a<e;a++){for(let l=0;l<4;l++)r[l]=v0[i[l]>>24&255]^I0[i[(l+3)%4]>>16&255]^O0[i[(l+2)%4]>>8&255]^k0[i[(l+1)%4]&255]^I(this,L,"f")[a][l];i=r.slice()}const s=new Uint8Array(16);let o=0;for(let a=0;a<4;a++)o=I(this,L,"f")[e][a],s[4*a]=(K1[i[a]>>24&255]^o>>24)&255,s[4*a+1]=(K1[i[(a+3)%4]>>16&255]^o>>16)&255,s[4*a+2]=(K1[i[(a+2)%4]>>8&255]^o>>8)&255,s[4*a+3]=(K1[i[(a+1)%4]&255]^o)&255;return s}}F1=new WeakMap,L=new WeakMap,M=new WeakMap;class p3{constructor(t,e,r){if(r&&!(this instanceof r))throw new Error(`${t} must be instantiated with "new"`);Object.defineProperties(this,{aes:{enumerable:!0,value:new N2(e)},name:{enumerable:!0,value:t}})}}var G1=function(n,t,e,r,i){if(typeof t=="function"?n!==t||!i:!t.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");return t.set(n,e),e},c1=function(n,t,e,r){if(typeof t=="function"?n!==t||!r:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t.get(n)},L1,K;class E2 extends p3{constructor(t,e){if(super("ECC",t,E2),L1.set(this,void 0),K.set(this,void 0),e){if(e.length%16)throw new TypeError("invalid iv size (must be 16 bytes)");G1(this,L1,new Uint8Array(e))}else G1(this,L1,new Uint8Array(16));G1(this,K,this.iv)}get iv(){return new Uint8Array(c1(this,L1))}encrypt(t){if(t.length%16)throw new TypeError("invalid plaintext size (must be multiple of 16 bytes)");const e=new Uint8Array(t.length);for(let r=0;r<t.length;r+=16){for(let i=0;i<16;i++)c1(this,K)[i]^=t[r+i];G1(this,K,this.aes.encrypt(c1(this,K))),e.set(c1(this,K),r)}return e}decrypt(t){if(t.length%16)throw new TypeError("invalid ciphertext size (must be multiple of 16 bytes)");const e=new Uint8Array(t.length);for(let r=0;r<t.length;r+=16){const i=this.aes.decrypt(t.subarray(r,r+16));for(let s=0;s<16;s++)e[r+s]=i[s]^c1(this,K)[s],c1(this,K)[s]=t[r+s]}return e}}L1=new WeakMap,K=new WeakMap;var p1=function(n,t,e,r,i){if(typeof t=="function"?n!==t||!i:!t.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");return t.set(n,e),e},S=function(n,t,e,r){if(e==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof t=="function"?n!==t||!r:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e==="m"?r:e==="a"?r.call(n):r?r.value:t.get(n)},U1,l1,U;class R1 extends p3{constructor(t,e){super("CTR",t,R1),U1.set(this,void 0),l1.set(this,void 0),U.set(this,void 0),p1(this,U,new Uint8Array(16)),S(this,U,"f").fill(0),p1(this,U1,S(this,U,"f")),p1(this,l1,16),e==null&&(e=1),typeof e=="number"?this.setCounterValue(e):this.setCounterBytes(e)}get counter(){return new Uint8Array(S(this,U,"f"))}setCounterValue(t){if(!Number.isInteger(t)||t<0||t>Number.MAX_SAFE_INTEGER)throw new TypeError("invalid counter initial integer value");for(let e=15;e>=0;--e)S(this,U,"f")[e]=t%256,t=Math.floor(t/256)}setCounterBytes(t){if(t.length!==16)throw new TypeError("invalid counter initial Uint8Array value length");S(this,U,"f").set(t)}increment(){for(let t=15;t>=0;t--)if(S(this,U,"f")[t]===255)S(this,U,"f")[t]=0;else{S(this,U,"f")[t]++;break}}encrypt(t){var e,r;const i=new Uint8Array(t);for(let s=0;s<i.length;s++)S(this,l1,"f")===16&&(p1(this,U1,this.aes.encrypt(S(this,U,"f"))),p1(this,l1,0),this.increment()),i[s]^=S(this,U1,"f")[p1(this,l1,(r=S(this,l1,"f"),e=r++,r)),e];return i}decrypt(t){return this.encrypt(t)}}U1=new WeakMap,l1=new WeakMap,U=new WeakMap;function P0(n){if(n.length<16)throw new TypeError("PKCS#7 invalid length");const t=n[n.length-1];if(t>16)throw new TypeError("PKCS#7 padding byte out of range");const e=n.length-t;for(let r=0;r<t;r++)if(n[e+r]!==t)throw new TypeError("PKCS#7 invalid padding byte");return new Uint8Array(n.subarray(0,e))}function f3(n){return typeof n=="string"&&!n.startsWith("0x")&&(n="0x"+n),B2(n)}function k1(n,t){for(n=String(n);n.length<t;)n="0"+n;return n}function $1(n){return typeof n=="string"?g1(n,"NFKC"):B2(n)}function b(n,t){const e=t.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);p(e!=null,"invalid path","path",t);const r=e[1],i=e[3],s=e[4]==="!";let o=n;for(const a of r.toLowerCase().split(".")){if(Array.isArray(o)){if(!a.match(/^[0-9]+$/))break;o=o[parseInt(a)]}else if(typeof o=="object"){let l=null;for(const d in o)if(d.toLowerCase()===a){l=o[d];break}o=l}else o=null;if(o==null)break}if(p(!s||o!=null,"missing required value","path",r),i&&o!=null){if(i==="int"){if(typeof o=="string"&&o.match(/^-?[0-9]+$/))return parseInt(o);if(Number.isSafeInteger(o))return o}if(i==="number"&&typeof o=="string"&&o.match(/^-?[0-9.]*$/))return parseFloat(o);if(i==="data"&&typeof o=="string")return f3(o);if(i==="array"&&Array.isArray(o)||i===typeof o)return o;p(!1,`wrong type found for ${i} `,"path",r)}return o}const y3="m/44'/60'/0'/0/0";function C2(n){try{const t=JSON.parse(n);if((t.version!=null?parseInt(t.version):0)===3)return!0}catch{}return!1}function D0(n,t,e){if(b(n,"crypto.cipher:string")==="aes-128-ctr"){const r=b(n,"crypto.cipherparams.iv:data!"),i=new R1(t,r);return A(i.decrypt(e))}V(!1,"unsupported cipher","UNSUPPORTED_OPERATION",{operation:"decrypt"})}function j1(n,t){const e=y(t),r=b(n,"crypto.ciphertext:data!"),i=A(m2(d1([e.slice(16,32),r]))).substring(2);p(i===b(n,"crypto.mac:string!").toLowerCase(),"incorrect password","password","[ REDACTED ]");const s=D0(n,e.slice(0,16),r),o=X1(s);if(n.address){let l=n.address.toLowerCase();l.startsWith("0x")||(l="0x"+l),p(y2(l)===o,"keystore address/privateKey mismatch","address",n.address)}const a={address:o,privateKey:s};if(b(n,"x-ethers.version:string")==="0.1"){const l=e.slice(32,64),d=b(n,"x-ethers.mnemonicCiphertext:data!"),h=b(n,"x-ethers.mnemonicCounter:data!"),u=new R1(l,h);a.mnemonic={path:b(n,"x-ethers.path:string")||y3,locale:b(n,"x-ethers.locale:string")||"en",entropy:A(y(u.decrypt(d)))}}return a}function m3(n){const t=b(n,"crypto.kdf:string");if(t&&typeof t=="string"){if(t.toLowerCase()==="scrypt"){const e=b(n,"crypto.kdfparams.salt:data!"),r=b(n,"crypto.kdfparams.n:int!"),i=b(n,"crypto.kdfparams.r:int!"),s=b(n,"crypto.kdfparams.p:int!");p(r>0&&(r&r-1)===0,"invalid kdf.N","kdf.N",r),p(i>0&&s>0,"invalid kdf","kdf",t);const o=b(n,"crypto.kdfparams.dklen:int!");return p(o===32,"invalid kdf.dklen","kdf.dflen",o),{name:"scrypt",salt:e,N:r,r:i,p:s,dkLen:64}}else if(t.toLowerCase()==="pbkdf2"){const e=b(n,"crypto.kdfparams.salt:data!"),r=b(n,"crypto.kdfparams.prf:string!"),i=r.split("-").pop();p(i==="sha256"||i==="sha512","invalid kdf.pdf","kdf.pdf",r);const s=b(n,"crypto.kdfparams.c:int!"),o=b(n,"crypto.kdfparams.dklen:int!");return p(o===32,"invalid kdf.dklen","kdf.dklen",o),{name:"pbkdf2",salt:e,count:s,dkLen:o,algorithm:i}}}p(!1,"unsupported key-derivation function","kdf",t)}function M0(n,t){const e=JSON.parse(n),r=$1(t),i=m3(e);if(i.name==="pbkdf2"){const{salt:u,count:f,dkLen:c,algorithm:w}=i,g=z(r,u,f,c,w);return j1(e,g)}V(i.name==="scrypt","cannot be reached","UNKNOWN_ERROR",{params:i});const{salt:s,N:o,r:a,p:l,dkLen:d}=i,h=I1(r,s,o,a,l,d);return j1(e,h)}function S2(n){return new Promise(t=>{setTimeout(()=>{t()},n)})}async function $0(n,t,e){const r=JSON.parse(n),i=$1(t),s=m3(r);if(s.name==="pbkdf2"){e&&(e(0),await S2(0));const{salt:f,count:c,dkLen:w,algorithm:g}=s,N=z(i,f,c,w,g);return e&&(e(1),await S2(0)),j1(r,N)}V(s.name==="scrypt","cannot be reached","UNKNOWN_ERROR",{params:s});const{salt:o,N:a,r:l,p:d,dkLen:h}=s,u=await v1(i,o,a,l,d,h,e);return j1(r,u)}function g3(n){const t=n.salt!=null?y(n.salt,"options.salt"):_(32);let e=1<<17,r=8,i=1;return n.scrypt&&(n.scrypt.N&&(e=n.scrypt.N),n.scrypt.r&&(r=n.scrypt.r),n.scrypt.p&&(i=n.scrypt.p)),p(typeof e=="number"&&e>0&&Number.isSafeInteger(e)&&(BigInt(e)&BigInt(e-1))===BigInt(0),"invalid scrypt N parameter","options.N",e),p(typeof r=="number"&&r>0&&Number.isSafeInteger(r),"invalid scrypt r parameter","options.r",r),p(typeof i=="number"&&i>0&&Number.isSafeInteger(i),"invalid scrypt p parameter","options.p",i),{name:"scrypt",dkLen:32,salt:t,N:e,r,p:i}}function w3(n,t,e,r){const i=y(e.privateKey,"privateKey"),s=r.iv!=null?y(r.iv,"options.iv"):_(16);p(s.length===16,"invalid options.iv length","options.iv",r.iv);const o=r.uuid!=null?y(r.uuid,"options.uuid"):_(16);p(o.length===16,"invalid options.uuid length","options.uuid",r.iv);const a=n.slice(0,16),l=n.slice(16,32),d=new R1(a,s),h=y(d.encrypt(i)),u=m2(d1([l,h])),f={address:e.address.substring(2).toLowerCase(),id:J3(o),version:3,Crypto:{cipher:"aes-128-ctr",cipherparams:{iv:A(s).substring(2)},ciphertext:A(h).substring(2),kdf:"scrypt",kdfparams:{salt:A(t.salt).substring(2),n:t.N,dklen:32,p:t.p,r:t.r},mac:u.substring(2)}};if(e.mnemonic){const c=r.client!=null?r.client:`ethers/${z3}`,w=e.mnemonic.path||y3,g=e.mnemonic.locale||"en",N=n.slice(32,64),R=y(e.mnemonic.entropy,"account.mnemonic.entropy"),v=_(16),k=new R1(N,v),F=y(k.encrypt(R)),E=new Date,O="UTC--"+(E.getUTCFullYear()+"-"+k1(E.getUTCMonth()+1,2)+"-"+k1(E.getUTCDate(),2)+"T"+k1(E.getUTCHours(),2)+"-"+k1(E.getUTCMinutes(),2)+"-"+k1(E.getUTCSeconds(),2)+".0Z")+"--"+f.address;f["x-ethers"]={client:c,gethFilename:O,path:w,locale:g,mnemonicCounter:A(v).substring(2),mnemonicCiphertext:A(F).substring(2),version:"0.1"}}return JSON.stringify(f)}function A3(n,t,e){e==null&&(e={});const r=$1(t),i=g3(e),s=I1(r,i.salt,i.N,i.r,i.p,64);return w3(y(s),i,n,e)}async function N3(n,t,e){e==null&&(e={});const r=$1(t),i=g3(e),s=await v1(r,i.salt,i.N,i.r,i.p,64,e.progressCallback);return w3(y(s),i,n,e)}const i2="m/44'/60'/0'/0/0",x0=new Uint8Array([66,105,116,99,111,105,110,32,115,101,101,100]),A1=2147483648,B0=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),K0="0123456789abcdef";function H1(n,t){let e="";for(;n;)e=K0[n%16]+e,n=Math.trunc(n/16);for(;e.length<t*2;)e="0"+e;return"0x"+e}function a2(n){const t=y(n),e=f2(N1(N1(t)),0,4),r=d1([t,e]);return x3(r)}const x={};function E3(n,t,e,r){const i=new Uint8Array(37);n&A1?(V(r!=null,"cannot derive child of neutered node","UNSUPPORTED_OPERATION",{operation:"deriveChild"}),i.set(y(r),1)):i.set(y(e));for(let o=24;o>=0;o-=8)i[33+(o>>3)]=n>>24-o&255;const s=y(T1("sha512",t,i));return{IL:s.slice(0,32),IR:s.slice(32)}}function R3(n,t){const e=t.split("/");p(e.length>0,"invalid path","path",t),e[0]==="m"&&(p(n.depth===0,`cannot derive root path (i.e. path starting with "m/") for a node at non-zero depth ${n.depth}`,"path",t),e.shift());let r=n;for(let i=0;i<e.length;i++){const s=e[i];if(s.match(/^[0-9]+'$/)){const o=parseInt(s.substring(0,s.length-1));p(o<A1,"invalid path index",`path[${i}]`,s),r=r.deriveChild(A1+o)}else if(s.match(/^[0-9]+$/)){const o=parseInt(s);p(o<A1,"invalid path index",`path[${i}]`,s),r=r.deriveChild(o)}else p(!1,"invalid path component",`path[${i}]`,s)}return r}var W1,l2,m1,P1;const d2=class W extends u3{constructor(t,e,r,i,s,o,a,l,d){super(e,d),B(this,W1),T(this,"publicKey"),T(this,"fingerprint"),T(this,"parentFingerprint"),T(this,"mnemonic"),T(this,"chainCode"),T(this,"path"),T(this,"index"),T(this,"depth"),p2(t,x,"HDNodeWallet"),G(this,{publicKey:e.compressedPublicKey});const h=f2(b1(N1(this.publicKey)),0,4);G(this,{parentFingerprint:r,fingerprint:h,chainCode:i,path:s,index:o,depth:a}),G(this,{mnemonic:l})}connect(t){return new W(x,this.signingKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,this.mnemonic,t)}async encrypt(t,e){return await N3($(this,W1,l2).call(this),t,{progressCallback:e})}encryptSync(t){return A3($(this,W1,l2).call(this),t)}get extendedKey(){return V(this.depth<256,"Depth too deep","UNSUPPORTED_OPERATION",{operation:"extendedKey"}),a2(d1(["0x0488ADE4",H1(this.depth,1),this.parentFingerprint,H1(this.index,4),this.chainCode,d1(["0x00",this.privateKey])]))}hasPath(){return this.path!=null}neuter(){return new M1(x,this.address,this.publicKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,this.provider)}deriveChild(t){const e=D2(t,"index");p(e<=4294967295,"invalid index","index",e);let r=this.path;r&&(r+="/"+(e&2147483647),e&A1&&(r+="'"));const{IR:i,IL:s}=E3(e,this.chainCode,this.publicKey,this.privateKey),o=new D1(L3((U3(s)+BigInt(this.privateKey))%B0,32));return new W(x,o,this.fingerprint,A(i),r,e,this.depth+1,this.mnemonic,this.provider)}derivePath(t){return R3(this,t)}static fromExtendedKey(t){const e=P3(D3(t));p(e.length===82||a2(e.slice(0,78))===t,"invalid extended key","extendedKey","[ REDACTED ]");const r=e[4],i=A(e.slice(5,9)),s=parseInt(A(e.slice(9,13)).substring(2),16),o=A(e.slice(13,45)),a=e.slice(45,78);switch(A(e.slice(0,4))){case"0x0488b21e":case"0x043587cf":{const l=A(a);return new M1(x,X1(l),l,i,o,null,s,r,null)}case"0x0488ade4":case"0x04358394 ":if(a[0]!==0)break;return new W(x,new D1(a.slice(1)),i,o,null,s,r,null,null)}p(!1,"invalid extended key prefix","extendedKey","[ REDACTED ]")}static createRandom(t,e,r){var i;t==null&&(t=""),e==null&&(e=i2),r==null&&(r=h1.wordlist());const s=E1.fromEntropy(_(16),t,r);return $(i=W,m1,P1).call(i,s.computeSeed(),s).derivePath(e)}static fromMnemonic(t,e){var r;return e||(e=i2),$(r=W,m1,P1).call(r,t.computeSeed(),t).derivePath(e)}static fromPhrase(t,e,r,i){var s;e==null&&(e=""),r==null&&(r=i2),i==null&&(i=h1.wordlist());const o=E1.fromPhrase(t,e,i);return $(s=W,m1,P1).call(s,o.computeSeed(),o).derivePath(r)}static fromSeed(t){var e;return $(e=W,m1,P1).call(e,t,null)}};W1=new WeakSet,l2=function(){const n={address:this.address,privateKey:this.privateKey},t=this.mnemonic;return this.path&&t&&t.wordlist.locale==="en"&&t.password===""&&(n.mnemonic={path:this.path,locale:"en",entropy:t.entropy}),n},m1=new WeakSet,P1=function(n,t){p(B3(n),"invalid seed","seed","[REDACTED]");const e=y(n,"seed");p(e.length>=16&&e.length<=64,"invalid seed","seed","[REDACTED]");const r=y(T1("sha512",x0,e)),i=new D1(A(r.slice(0,32)));return new d2(x,i,"0x00000000",A(r.slice(32)),"m",0,0,t,null)},B(d2,m1);let h2=d2;class M1 extends M3{constructor(t,e,r,i,s,o,a,l,d){super(e,d),T(this,"publicKey"),T(this,"fingerprint"),T(this,"parentFingerprint"),T(this,"chainCode"),T(this,"path"),T(this,"index"),T(this,"depth"),p2(t,x,"HDNodeVoidWallet"),G(this,{publicKey:r});const h=f2(b1(N1(r)),0,4);G(this,{publicKey:r,fingerprint:h,parentFingerprint:i,chainCode:s,path:o,index:a,depth:l})}connect(t){return new M1(x,this.address,this.publicKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,t)}get extendedKey(){return V(this.depth<256,"Depth too deep","UNSUPPORTED_OPERATION",{operation:"extendedKey"}),a2(d1(["0x0488B21E",H1(this.depth,1),this.parentFingerprint,H1(this.index,4),this.chainCode,this.publicKey]))}hasPath(){return this.path!=null}deriveChild(t){const e=D2(t,"index");p(e<=4294967295,"invalid index","index",e);let r=this.path;r&&(r+="/"+(e&2147483647),e&A1&&(r+="'"));const{IR:i,IL:s}=E3(e,this.chainCode,this.publicKey,null),o=D1.addPoints(s,this.publicKey,!0),a=X1(o);return new M1(x,a,o,this.fingerprint,A(i),r,e,this.depth+1,this.provider)}derivePath(t){return R3(this,t)}}function L2(n){try{if(JSON.parse(n).encseed)return!0}catch{}return!1}function U2(n,t){const e=JSON.parse(n),r=$1(t),i=y2(b(e,"ethaddr:string!")),s=f3(b(e,"encseed:string!"));p(s&&s.length%16===0,"invalid encseed","json",n);const o=y(z(r,r,2e3,32,"sha256")).slice(0,16),a=s.slice(0,16),l=s.slice(16),d=new E2(o,a),h=P0(y(d.decrypt(l)));let u="";for(let f=0;f<h.length;f++)u+=String.fromCharCode(h[f]);return{address:i,privateKey:$2(u)}}function P2(n){return new Promise(t=>{setTimeout(()=>{t()},n)})}var J1,u2;const c2=class V1 extends u3{constructor(t,e){typeof t=="string"&&!t.startsWith("0x")&&(t="0x"+t);let r=typeof t=="string"?new D1(t):t;super(r,e)}connect(t){return new V1(this.signingKey,t)}async encrypt(t,e){const r={address:this.address,privateKey:this.privateKey};return await N3(r,t,{progressCallback:e})}encryptSync(t){const e={address:this.address,privateKey:this.privateKey};return A3(e,t)}static async fromEncryptedJson(t,e,r){var i;let s=null;return C2(t)?s=await $0(t,e,r):L2(t)&&(r&&(r(0),await P2(0)),s=U2(t,e),r&&(r(1),await P2(0))),$(i=V1,J1,u2).call(i,s)}static fromEncryptedJsonSync(t,e){var r;let i=null;return C2(t)?i=M0(t,e):L2(t)?i=U2(t,e):p(!1,"invalid JSON wallet","json","[ REDACTED ]"),$(r=V1,J1,u2).call(r,i)}static createRandom(t){const e=h2.createRandom();return t?e.connect(t):e}static fromPhrase(t,e){const r=h2.fromPhrase(t);return e?r.connect(e):r}};J1=new WeakSet,u2=function(n){if(p(n,"invalid JSON wallet","json","[ REDACTED ]"),"mnemonic"in n&&n.mnemonic&&n.mnemonic.locale==="en"){const e=E1.fromEntropy(n.mnemonic.entropy),r=h2.fromMnemonic(e,n.mnemonic.path);if(r.address===n.address&&r.privateKey===n.privateKey)return r;console.log("WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key")}const t=new c2(n.privateKey);return p(t.address===n.address,"address/privateKey mismatch","json","[ REDACTED ]"),t},B(c2,J1);let G0=c2;async function _0(n,t,e){const r=typeof t=="string"?new G0(t,n):t,i=(e==null?void 0:e.chain)??(await s2.chainFromRpc(n))[1],s=new d0(r);if(s.provider===null)try{s.connect(n)}catch(o){console.error("Cannot connect to network for signer",o)}return new F0(i,await r.getAddress(),s,e)}class F0 extends I3{constructor(t,e,r,i){super(t,e,r),T(this,"opts"),this.opts=i}chain(){return this._chain}address(){return this._address}async sign(t){var e,r,i,s,o,a,l;const d=this.chain(),h=[];let u=500000n,f=100000000000n,c=1500000000n,w=100000000n;if(((e=this.opts)==null?void 0:e.overrides)===void 0&&d!=="Celo"){const N=await this._signer.provider.getFeeData();f=N.gasPrice??f,c=N.maxFeePerGas??c,w=N.maxPriorityFeePerGas??w}((r=this.opts)==null?void 0:r.gasLimit)!==void 0&&(u=this.opts.gasLimit),((i=this.opts)==null?void 0:i.maxGasLimit)!==void 0&&(u=u>((s=this.opts)==null?void 0:s.maxGasLimit)?(o=this.opts)==null?void 0:o.maxGasLimit:u);const g=d==="Oasis"?{gasLimit:u,gasPrice:f,type:0}:{gasLimit:u,maxFeePerGas:c,maxPriorityFeePerGas:w};for(const N of t){const{transaction:R,description:v}=N;(a=this.opts)!=null&&a.debug&&console.log(`Signing: ${v} for ${this.address()}`);const k={...R,...g,from:this.address(),nonce:await this._signer.getNonce(),...(l=this.opts)==null?void 0:l.overrides};h.push(await this._signer.signTransaction(k))}return h}}const V0={Address:T3,Platform:s2,getSigner:_0,protocols:{WormholeCore:()=>O1(()=>import("./index-BGLdF6jF.js").then(n=>n.dW),__vite__mapDeps([0,1])),TokenBridge:()=>O1(()=>import("./index-D4WbU33f-Dfd1dsQV.js"),__vite__mapDeps([2,0,1])),PorticoBridge:()=>O1(()=>import("./index-DVj58Xn9-5qOZdwjj.js"),__vite__mapDeps([3,0,1,2])),CircleBridge:()=>O1(()=>import("./index-CNhD4Iu8-s317dwbW.js"),__vite__mapDeps([4,2,0,1])),TBTCBridge:()=>O1(()=>import("./index-BgvV5NF2-DpcLDqm4.js"),__vite__mapDeps([5,0,1]))},getChain:(n,t,e)=>new b3(t,new s2(n,v3(n,O3,{[t]:e})))};export{V0 as default};
