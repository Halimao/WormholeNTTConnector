import{d as g,i as k,l as x,a as L,b as O,e as S,f as T}from"./evm-A_PshNGs-BP88HHT7.js";import{a8 as m,B as y,D as $,a as p,a9 as w}from"./index-CNWcuxPc-C5KIuBWR.js";import"./index-BGLdF6jF.js";class R extends p{constructor({callbackSelector:r,cause:e,data:l,extraData:o,sender:u,urls:a}){var n;super(e.shortMessage||"An error occurred while fetching for an offchain result.",{cause:e,metaMessages:[...e.metaMessages||[],(n=e.metaMessages)!=null&&n.length?"":[],"Offchain Gateway Call:",a&&["  Gateway URL(s):",...a.map(d=>`    ${w(d)}`)],`  Sender: ${u}`,`  Data: ${l}`,`  Callback selector: ${r}`,`  Extra data: ${o}`].flat(),name:"OffchainLookupError"})}}class D extends p{constructor({result:r,url:e}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${w(e)}`,`Response: ${y(r)}`],name:"OffchainLookupResponseMalformedError"})}}class M extends p{constructor({sender:r,to:e}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${e}`,`OffchainLookup sender address: ${r}`],name:"OffchainLookupSenderMismatchError"})}}const G="0x556f1830",v={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function N(c,{blockNumber:r,blockTag:e,data:l,to:o}){const{args:u}=g({data:l,abi:[v]}),[a,n,d,i,s]=u,{ccipRead:t}=c,h=t&&typeof(t==null?void 0:t.request)=="function"?t.request:C;try{if(!k(o,a))throw new M({sender:a,to:o});const f=n.includes(x)?await L({data:d,ccipRequest:h}):await h({data:d,sender:a,urls:n}),{data:b}=await O(c,{blockNumber:r,blockTag:e,data:S([i,T([{type:"bytes"},{type:"bytes"}],[f,s])]),to:o});return b}catch(f){throw new R({callbackSelector:i,cause:f,data:l,extraData:s,sender:a,urls:n})}}async function C({data:c,sender:r,urls:e}){var l;let o=new Error("An unknown error occurred.");for(let u=0;u<e.length;u++){const a=e[u],n=a.includes("{data}")?"GET":"POST",d=n==="POST"?{data:c,sender:r}:void 0,i=n==="POST"?{"Content-Type":"application/json"}:{};try{const s=await fetch(a.replace("{sender}",r.toLowerCase()).replace("{data}",c),{body:JSON.stringify(d),headers:i,method:n});let t;if((l=s.headers.get("Content-Type"))!=null&&l.startsWith("application/json")?t=(await s.json()).data:t=await s.text(),!s.ok){o=new m({body:d,details:t!=null&&t.error?y(t.error):s.statusText,headers:s.headers,status:s.status,url:a});continue}if(!$(t)){o=new D({result:t,url:a});continue}return t}catch(s){o=new m({body:d,details:s.message,url:a})}}throw o}export{C as ccipRequest,N as offchainLookup,v as offchainLookupAbiItem,G as offchainLookupSignature};
